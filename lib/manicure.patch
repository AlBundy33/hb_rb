Index: manicure.rb
===================================================================
--- manicure.rb	(revision 273)
+++ manicure.rb	(revision 274)
@@ -8,7 +8,7 @@
 # This script parses HandBrake's Mac presets into hashes, which can
 # be displayed in various formats for use by the CLI and its wrappers.
 
-# For handling command -line arguments to the script
+# For handling command line arguments to the script
 require 'optparse'
 require 'ostruct'
 require 'rubygems'
@@ -430,28 +430,28 @@
     #Auto Passthru Mask
     audioCopyMask = ""
     
-    if hash["AudioAllowAACPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowAACPass"])
       audioCopyMask << "aac"
     end
-    if hash["AudioAllowAC3Pass"].to_i == 1
+    if trueOrOne(hash["AudioAllowAC3Pass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "ac3"
     end
-    if hash["AudioAllowDTSHDPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowDTSHDPass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "dtshd"
     end
-    if hash["AudioAllowDTSPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowDTSPass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "dts"
     end
-    if hash["AudioAllowMP3Pass"].to_i == 1
+    if trueOrOne(hash["AudioAllowMP3Pass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
@@ -508,7 +508,7 @@
     end
     
     #iPod MP4 atom
-    if hash["Mp4iPodCompatible"].to_i == 1
+    if trueOrOne(hash["Mp4iPodCompatible"])
       commandString << " -I"
     end
     
@@ -518,7 +518,7 @@
     end
     
     #MP4 Optimize for HTTP Streaming
-    if hash["Mp4HttpOptimize"].to_i == 1
+    if trueOrOne(hash["Mp4HttpOptimize"])
       commandString << " -O"
     end
     
@@ -680,6 +680,10 @@
     puts commandString
   end
   
+  def trueOrOne(value)
+    value.to_s.eql?("true") or value.to_s.eql?("1")
+  end
+  
   def generateCLIParse(hash, depth) # Makes a CLI equivalent of all user presets, for wrappers to parse
     commandString = ""
     depth.times do
@@ -838,28 +842,28 @@
     #Auto Passthru Mask
     audioCopyMask = ""
     
-    if hash["AudioAllowAACPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowAACPass"])
       audioCopyMask << "aac"
     end
-    if hash["AudioAllowAC3Pass"].to_i == 1
+    if trueOrOne(hash["AudioAllowAC3Pass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "ac3"
     end
-    if hash["AudioAllowDTSHDPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowDTSHDPass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "dtshd"
     end
-    if hash["AudioAllowDTSPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowDTSPass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "dts"
     end
-    if hash["AudioAllowMP3Pass"].to_i == 1
+    if trueOrOne(hash["AudioAllowMP3Pass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
@@ -916,7 +920,7 @@
     end
     
     #iPod MP4 atom
-    if hash["Mp4iPodCompatible"].to_i == 1
+    if trueOrOne(hash["Mp4iPodCompatible"])
       commandString << " -I"
     end
     
@@ -926,7 +930,7 @@
     end
     
     #MP4 Optimize for HTTP Streaming
-    if hash["Mp4HttpOptimize"].to_i == 1
+    if trueOrOne(hash["Mp4HttpOptimize"])
       commandString << " -O"
     end
     
@@ -1085,17 +1089,17 @@
     commandString << "}\n    "
     
     #iPod MP4 atom
-    if hash["Mp4iPodCompatible"].to_i == 1
+    if trueOrOne(hash["Mp4iPodCompatible"])
       commandString << "job->ipod_atom = 1;\n    "
     end
     
     # 64-bit files
-    if hash["Mp4LargeFile"] == 1
+    if trueOrOne(hash["Mp4LargeFile"])
       commandString << "job->largeFileSize = 1;\n    "
     end
     
     #MP4 Optimize for HTTP Streaming
-    if hash["Mp4HttpOptimize"].to_i == 1
+    if trueOrOne(hash["Mp4HttpOptimize"])
       commandString << "job->mp4_optimize = 1;\n    "
     end
     
@@ -1283,19 +1287,19 @@
       commandString << "if( allowed_audio_copy == -1 )\n    "
       commandString << "{\n    "
       commandString << "    allowed_audio_copy = 0;\n    "
-      if hash["AudioAllowAACPass"].to_i == 1
+      if trueOrOne(hash["AudioAllowAACPass"])
         commandString << "    allowed_audio_copy |= HB_ACODEC_AAC_PASS;\n    "
       end
-      if hash["AudioAllowAC3Pass"].to_i == 1
+      if trueOrOne(hash["AudioAllowAC3Pass"])
         commandString << "    allowed_audio_copy |= HB_ACODEC_AC3_PASS;\n    "
       end
-      if hash["AudioAllowDTSHDPass"].to_i == 1
+      if trueOrOne(hash["AudioAllowDTSHDPass"])
         commandString << "    allowed_audio_copy |= HB_ACODEC_DCA_HD_PASS;\n    "
       end
-      if hash["AudioAllowDTSPass"].to_i == 1
+      if trueOrOne(hash["AudioAllowDTSPass"])
         commandString << "    allowed_audio_copy |= HB_ACODEC_DCA_PASS;\n    "
       end
-      if hash["AudioAllowMP3Pass"].to_i == 1
+      if trueOrOne(hash["AudioAllowMP3Pass"])
         commandString << "    allowed_audio_copy |= HB_ACODEC_MP3_PASS;\n    "
       end
       commandString << "    allowed_audio_copy &= HB_ACODEC_PASS_MASK;\n    "
@@ -1708,28 +1712,28 @@
     #Auto Passthru Mask
     audioCopyMask = ""
     
-    if hash["AudioAllowAACPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowAACPass"])
       audioCopyMask << "aac"
     end
-    if hash["AudioAllowAC3Pass"].to_i == 1
+    if trueOrOne(hash["AudioAllowAC3Pass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "ac3"
     end
-    if hash["AudioAllowDTSHDPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowDTSHDPass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "dtshd"
     end
-    if hash["AudioAllowDTSPass"].to_i == 1
+    if trueOrOne(hash["AudioAllowDTSPass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
       audioCopyMask << "dts"
     end
-    if hash["AudioAllowMP3Pass"].to_i == 1
+    if trueOrOne(hash["AudioAllowMP3Pass"])
       if audioCopyMask.size > 0
         audioCopyMask << ","
       end
@@ -1786,17 +1790,17 @@
     end
     
     #iPod MP4 atom
-    if hash["Mp4iPodCompatible"].to_i == 1
+    if trueOrOne(hash["Mp4iPodCompatible"])
       commandString << " -I"
     end
     
     # 64-bit files
-    if hash["Mp4LargeFile"] == 1
+    if trueOrOne(hash["Mp4LargeFile"])
       commandString << " -4"
     end
     
     #MP4 Optimize for HTTP Streaming
-    if hash["Mp4HttpOptimize"].to_i == 1
+    if trueOrOne(hash["Mp4HttpOptimize"])
       commandString << " -O"
     end
     
@@ -1938,17 +1942,19 @@
   
 end
 
-# First grab the specified CLI options
-options = readOptions
-
-# Only run if one of the useful CLI flags have been passed
-if options.cliraw == true || options.cliparse == true || options.api == true || options.apilist == true
-  # This line is the ignition -- generates hashes of
-  # presets and then displays them to the screen
-  # with the options the user selects on the CLI. 
-  Display.new( Presets.new.hashMasterList, options )
-else
-  # Direct the user to the help
-  puts "\n\tUsage: manicure.rb [options]"
-  puts "\tSee help with -h or --help"
-end
+if __FILE__ == $0
+  # First grab the specified CLI options
+  options = readOptions
+  
+  # Only run if one of the useful CLI flags have been passed
+  if options.cliraw == true || options.cliparse == true || options.api == true || options.apilist == true
+    # This line is the ignition -- generates hashes of
+    # presets and then displays them to the screen
+    # with the options the user selects on the CLI. 
+    Display.new( Presets.new.hashMasterList, options )
+  else
+    # Direct the user to the help
+    puts "\n\tUsage: manicure.rb [options]"
+    puts "\tSee help with -h or --help"
+  end
+end
\ No newline at end of file
